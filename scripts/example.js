// Generated by CoffeeScript 1.10.0
var cronJob, get_username;

cronJob = require('cron').CronJob;

get_username = function(name) {
  var username;
  switch (name) {
    case "arakawa":
      return username = "しんたろーくん";
    case "chidahiroki":
      return username = "ちだっち";
    case "hiroaki.adachi":
      return username = "ひろあき兄貴";
    case "honda-misaki":
      return username = "みーちゃん";
    case "joji-sekiya":
      return username = "魚くん";
    case "kaminoura-koki":
      return username = "こーき";
    case "kana_saito":
      return username = "ちゃんかな";
    case "katsutoshi.saino":
      return username = "かつとしくん";
    case "kentarohorie":
      return username = "けんたろー";
    case "koichiro-abe":
      return username = "えいちゃん";
    case "kuboshizuma":
      return username = "しずま";
    case "mako-yukinari":
      return username = "ゆきりん";
    case "masashi.ogawa":
      return username = "まーくん";
    case "naoki-shizuka":
      return username = "しずかくん";
    case "naoki.mochizuki":
      return username = "もちぱいせん";
    case "ryoji.saitou":
      return username = "りょーじくん";
    case "sawadakota":
      return username = "こーた";
    case "seo_kyohei":
      return username = "きょーへい";
    case "shuichiro.inagaki":
      return username = "がっきーくん";
    case "shutokondo":
      return username = "しゅーと兄貴";
    case "tadachi-yuta":
      return username = "ゆーた";
    case "takahashi-soya":
      return username = "そーちゃん";
    case "takefumiyamamura":
      return username = "たけちゃん";
    case "takumi-harigaya":
      return username = "たくみくん";
    case "teru_tamura":
      return username = "TERUくん";
    case "uchikawa":
      return username = "あいさん";
    case "yasushi-imada":
      return username = "やっちゃん";
    case "yoshihiro-nakamura":
      return username = "よっしーくん";
    case "yoshihiro-sanada":
      return username = "さなでぃーくん";
    case "yuki-ogawa":
      return username = "ゆうきくん";
    case "yuya-hirata":
      return username = "ゆうやくん";
    case "daitosaito":
      return username = "ベロチュー野郎";
    case "hiroshi.miyazaki":
      return username = "ザキミヤさん";
    case "hiroyuki-miyashita":
      return username = "ひろゆきくん";
    case "inuisouichirou":
      return username = "そういちろーくん";
    case "jun-yamada":
      return username = "じゅんじゅん";
    case "kazumaabe":
      return username = "かずまくん";
    case "keita-matsushita":
      return username = "けいたくん";
    case "kohei.ueta":
      return username = "こーへいくん";
    case "koichi_ozaki":
      return username = "こーいちさん";
    case "maikishinbo":
      return username = "まいき";
    case "ray":
      return username = "レイくん";
    case "ryoyasekino":
      return username = "りょーやくん";
    case "sakuramoto":
      return username = "さくしずたん";
    case "taikinakane":
      return username = "たいきくん";
    case "takashi":
      return username = "たかしくん";
    case "tatsuki.miura":
      return username = "たつきくん";
    case "tomoki-ninomiya":
      return username = "ともきくん";
    case "tsugita":
      return username = "としのりくん";
    case "yamato":
      return username = "やまとくん";
    case "yuito-sato":
      return username = "ゆいとくん";
    case "yusuke_yamane":
      return username = "ゆーすけくん";
    default:
      return username = "新人さん";
  }
};

module.exports = function(robot) {
  var ban_post, ban_post_mens, btimer1_1, btimer1_2, btimer1_3, btimer1_4, btimer2_1, btimer2_2, btimer2_3, btimer2_4, end_work, remind_exam1, remind_exam2, remind_mentor_fb, remind_music, remind_webook1, remind_webook2, remind_webook3, words;
  btimer1_1 = new cronJob('00 30 15 * * 0-6', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#mentor-contact"
      };
      return robot.send(envelope, "<!here> ブレイクタイム *30分前だよ:heartbeat:*");
    };
  })(this));
  btimer1_2 = new cronJob('00 45 15 * * 0-6', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#mentor-contact"
      };
      return robot.send(envelope, "<!here> ブレイクタイム *15分前だよ！:heartbeat:*");
    };
  })(this));
  btimer1_3 = new cronJob('00 55 15 * * 0-6', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#mentor-contact"
      };
      return robot.send(envelope, "<!here> ブレイクタイム *5分前だよ！:heartbeat:*");
    };
  })(this));
  btimer1_4 = new cronJob('00 00 16 * * 0-6', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#mentor-contact"
      };
      return robot.send(envelope, "*:sparkles::dancers::two_women_holding_hands::two_men_holding_hands::couple: *PARTY PEOPLE YEAH!!!!!* :couple: :two_men_holding_hands: :two_women_holding_hands: :dancers::sparkles:*\nhttp://disc-j.net/wp-content/uploads/2014/09/ultrajafter3.jpg");
    };
  })(this));
  btimer2_1 = new cronJob('00 30 19 * * 0-6', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#mentor-contact"
      };
      return robot.send(envelope, "<!here> ブレイクタイム *30分前だよ！:heartbeat:*");
    };
  })(this));
  btimer2_2 = new cronJob('00 45 19 * * 0-6', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#mentor-contact"
      };
      return robot.send(envelope, "<!here> ブレイクタイム *15分前だよ！:heartbeat:*");
    };
  })(this));
  btimer2_3 = new cronJob('00 55 19 * * 0-6', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#mentor-contact"
      };
      return robot.send(envelope, "<!here> ブレイクタイム *5分前だよ！:heartbeat:*");
    };
  })(this));
  btimer2_4 = new cronJob('00 00 20 * * 0-6', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#mentor-contact"
      };
      return robot.send(envelope, ":sparkles::dancers::two_women_holding_hands::two_men_holding_hands::couple: *PARTY PEOPLE YEAH!!!!!* :couple: :two_men_holding_hands: :two_women_holding_hands: :dancers::sparkles:\nhttp://disc-j.net/wp-content/uploads/2014/09/ultrajafter3.jpg");
    };
  })(this));
  remind_music = new cronJob('00 55 22 * * 0-6', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#mentor-contact"
      };
      return robot.send(envelope, "<!here> *蛍の光を流してください٩(๑′∀ ‵๑)۶•*¨*•.¸¸♪*\nhttp://2.bp.blogspot.com/-hqIThX2BTI4/UAomQKywmHI/AAAAAAAAEAc/Gw9txocS6yI/s1600/%E3%83%9B%E3%82%BF%E3%83%AB%E3%83%8E%E3%83%92%E3%82%AB%E3%83%AA.jpg");
    };
  })(this));
  remind_mentor_fb = new cronJob('00 30 22 * * 0-6', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#mentor-contact"
      };
      return robot.send(envelope, "<!here> そういえば今日現場を見てこの人のココ良かったなぁとか気をつけた方がいいなぁって思った事とかない？\nもしあったら私に教えてくれると嬉しいなぁ:heartbeat:\n好きになっちゃうかも（笑）");
    };
  })(this));
  remind_water_n_stuff = new cronJob('0 11-22 * * 0-6', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#techcamp-shibuya"
      };
      return robot.send(envelope, "<!here> 飲み物無くなってないかな？ブランケット,ゴミ箱 綺麗になってるかな？確認してくれると嬉しいなあ :heartbeat:");
    };
  })(this));
  end_work = new cronJob('00 00 23 * * 0-6', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#mentor-contact"
      };
      return robot.send(envelope, "<!here> みんな、今日も一日おつかれさま:heartbeat:\n明日からも皆で頑張ろう\nhttp://i.imgur.com/hwIXH65.jpg");
    };
  })(this));
  ban_post = new cronJob('00 00 11 * * 0-6', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#random"
      };
      return robot.send(envelope, "10時から18時まではチャット禁止٩(๑òωó๑)۶\nお仕事終わるの待ってるから集中して頑張ってね(*˘︶˘*).｡.:*♡");
    };
  })(this));
  ban_post_mens = new cronJob('00 00 11 * * 0-6', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#mens-only"
      };
      return robot.send(envelope, "10時から18時まではチャット禁止٩(๑òωó๑)۶\n彼女欲しいなら下衆な会話してないで働け童貞野郎共。");
    };
  })(this));
  remind_exam1 = new cronJob('00 00 11 * * 3', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#weekly_exam"
      };
      return robot.send(envelope, "<!channel> 皆さん順調ですか？(ू˃̣̣̣̣̣̣︿˂̣̣̣̣̣̣ ू)応援してるので頑張ってください:heartbeat:");
    };
  })(this));
  remind_exam2 = new cronJob('00 00 11 * * 5', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#weekly_exam"
      };
      return robot.send(envelope, "<!channel> 提出は今日までですっっ！出さないと私が怒られちゃうの(ू˃̣̣̣̣̣̣︿˂̣̣̣̣̣̣ ू)");
    };
  })(this));
  remind_webook1 = new cronJob('00 00 11 * * 3', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#we-book"
      };
      return robot.send(envelope, "<!channel> 本、読んでますか？(๑•́ ₃ •̀๑)本を読む人って凄くカッコいい:heartbeat:");
    };
  })(this));
  remind_webook2 = new cronJob('00 00 23 * * 5', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#we-book"
      };
      return robot.send(envelope, "<!channel> 明日までだけど大丈夫かなぁ？楽しみー！:heartbeat:");
    };
  })(this));
  remind_webook3 = new cronJob('00 00 11 * * 6', (function(_this) {
    return function() {
      var envelope;
      envelope = {
        room: "#we-book"
      };
      return robot.send(envelope, "<!channel> 皆の感想文楽しみだなぁ★今日までだからねっ！٩(๑`ȏ´๑)۶:heartbeat:");
    };
  })(this));
  words = ['だまれよフィッシュ！魚でも釣ってろ！', 'お前に発言権はない', 'japanese please', 'その発言はクリミナルですね', 'ちょっと何言ってるか分からないです', 'は？', 'くさ', 'うざいくさいうるさい', 'からの？', 'ファーｗｗｗｗｗｗ(さんま)', 'おう、ほんでほんで？', 'jojiくん、いつもごめんね。本当はあなたの事...', 'كان حبا من منذ فترة طويلة'];
  robot.hear(/done|準備した/i, function(msg) {
    var username;
    username = get_username(msg.message.user.name);
    if (username === "魚くん") {
      return msg.send(msg.random(words));
    } else if (username === "新人さん") {
      return msg.send("ありがとう" + username + "！大好き:heartbeat:\n\nあ、ところでまだ私に自己紹介してくれてないよね・・・？\n皆から何て呼ばれてるのー？♡");
    } else {
      return msg.send("ありがとう" + username + "！大好き:heartbeat:");
    }
  });
  robot.respond(/@/i, function(msg) {
    var username;
    username = get_username(msg.message.user.name);
    return msg.send("わー！ありがとうー♡" + username + "の事ちょっと気になってきたかも。。。");
  });
  robot.hear(/休憩/i, function(msg) {
    var username;
    username = get_username(msg.message.user.name);
    return msg.send("おつかれさま" + username + ":heartbeat:\nゆっくり休んでね٩(๑′∀ ‵๑)۶•*¨*•.¸¸♪");
  });
  robot.hear(/戻/i, function(msg) {
    var username;
    username = get_username(msg.message.user.name);
    return msg.send("おかえり" + username + ":heartbeat:\nまた頑張ろおね！( ･ㅂ･)و ̑̑ ");
  });
  btimer1_1.start();
  btimer1_2.start();
  btimer1_3.start();
  btimer1_4.start();
  btimer2_1.start();
  btimer2_2.start();
  btimer2_3.start();
  btimer2_4.start();
  remind_exam1.start();
  remind_exam2.start();
  remind_webook1.start();
  remind_webook2.start();
  remind_webook3.start();
  remind_music.start();
  end_work.start();
  remind_mentor_fb.start();
  ban_post.start();
  remind_water_n_stuff.start();
  return ban_post_mens.start();
};
